colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
p.mat <- cor.mtest(modelling_[,c(31:54,59)])
corrplot(M,type="upper", tl.col="black", tl.srt=45,p.mat = p.mat, sig.level = 0.5)
relevant <- cbind(var=rownames(M),coeff=M[,25],p=p.mat[,25])
relevant <- as.data.frame(relevant)%>%
mutate(coeff = as.numeric(coeff),
p = as.numeric(p))%>%
filter(p<0.05)
#relvars <- cbind(relvars,relevant)
direst <- cbind(modelling_[,relevant$var],modelling_estimates19[,1:30])
direst["SmallArea"]<-paste(direst$Regione,direst$DGURBA,sep="_")
rcp <- recipe(Value ~ avglavdip+ avgret +  avgpiva +
avg15k   + avg26k   + avg55k   +
avg75k   + `avg120k`  + `avg120+k` +
`%lavdip` + `%10k`  + `%26k`   +
`%55k`    + `%75k` +  `%120k`  +
`%120+k`, data = modelling_)#maybe needs updating
rcp %>% prep() %>% juice() %>% glimpse()
treer <- decision_tree(
mode = "regression",
cost_complexity = 0.01,
tree_depth = 15,
min_n = 2
) %>% set_engine('rpart')
set.seed(42)
wrkfl_fit_treer <- workflow() %>%
add_model(treer) %>%
add_recipe(rcp) %>%
fit(modelling_)
wrkfl_fit_treer %>%
extract_fit_engine() %>%
rpart.plot::rpart.plot(type=2,tweak = 1.35,roundint = FALSE)
wrkfl_fit_treer %>%
extract_fit_parsnip() %>%
vip::vip(10)
yi <-predict(wrkfl_fit_treer,
new_data = modelling_)
modelling_ <- modelling_ %>%
bind_cols(predict(wrkfl_fit_treer, new_data = modelling_))
cor.test(modelling_$.pred, modelling_$Value) #corr=0.9898
library(sf)
direst19<-units_rd_19%>%
bind_cols(predict(wrkfl_fit_treer, new_data = units_rd_19))
direst19<-direst19%>%
group_by(Regione,DGURBA,)%>%
summarise(yi = weighted.mean(`.pred`,taxpayers),
ni = n(),
sd = sd( `.pred`, na.rm = TRUE),
Var = sd^2)%>%
mutate("SmallArea"= paste(Regione,DGURBA,sep="_"))%>%
left_join(modelling_estimates19)
#2020
modelling_<-modelling_estimates20
M<-cor(modelling_[,c(31:54,59)])
p.mat <- cor.mtest(modelling_[,c(31:54,59)])
corrplot(M,type="upper", tl.col="black", tl.srt=45,p.mat = p.mat, sig.level = 0.5)
relevant <- cbind(var=rownames(M),coeff=M[,25],p=p.mat[,25])
relevant <- as.data.frame(relevant)%>%
mutate(coeff = as.numeric(coeff),
p = as.numeric(p))%>%
filter(p<0.05)
relvars <- cbind(relvars,relevant)
direst <- cbind(modelling_[,relevant$var],modelling_estimates20[,1:30])
direst["SmallArea"]<-paste(direst$Regione,direst$DGURBA,sep="_")
rcp <- recipe(Value ~ avglavdip+ avgret +  avgpiva + avg0less +
avg15k   + avg26k   + avg55k   +
avg75k   + `avg120k`  + `avg120+k` +
`%lavdip` + `%10k`  + `%26k`   +
`%55k`    + `%75k` +  `%120k`  +
`%120+k`, data = modelling_)
rcp %>% prep() %>% juice() %>% glimpse()
treer <- decision_tree(
mode = "regression",
cost_complexity = 0.01,
tree_depth = 15,
min_n = 2
) %>% set_engine('rpart')
set.seed(42)
wrkfl_fit_treer <- workflow() %>%
add_model(treer) %>%
add_recipe(rcp) %>%
fit(modelling_)
wrkfl_fit_treer %>%
extract_fit_engine() %>%
rpart.plot::rpart.plot(type=2,tweak = 1.35,roundint = FALSE)
wrkfl_fit_treer %>%
extract_fit_parsnip() %>%
vip::vip(10)
yi <-predict(wrkfl_fit_treer,
new_data = modelling_)
modelling_ <- modelling_ %>%
bind_cols(predict(wrkfl_fit_treer, new_data = modelling_))
cor.test(modelling_$.pred, modelling_$Value) #corr=0.983366
direst20<-units_rd_20%>%
bind_cols(predict(wrkfl_fit_treer, new_data = units_rd_20))
direst20<-direst20%>%
group_by(Regione,DGURBA)%>%
summarise(yi = weighted.mean(`.pred`,taxpayers),
ni = n(),
sd = sd( `.pred`, na.rm = TRUE),
Var = sd^2)%>%
mutate("SmallArea"= paste(Regione,DGURBA,sep="_"))%>%
left_join(modelling_estimates20)
#2021
modelling_ <- modelling_estimates21
M<-cor(modelling_[,c(31:54,59)])
p.mat <- cor.mtest(modelling_[,c(31:54,59)])
corrplot(M,type="upper", tl.col="black", tl.srt=45,p.mat = p.mat, sig.level = 0.5)
relevant <- cbind(var=rownames(M),coeff=M[,25],p=p.mat[,25])
relevant <- as.data.frame(relevant)%>%
mutate(coeff = as.numeric(coeff),
p = as.numeric(p))%>%
filter(p<0.05)
relvars <- cbind(relvars,relevant)
direst <- cbind(modelling_[,relevant$var],modelling_estimates21[,1:30])
direst["SmallArea"]<-paste(direst$Regione,direst$DGURBA,sep="_")
rcp <- recipe(Value ~ avglavdip+ avgret +  avgpiva +
avg15k   + avg26k   + avg55k   +
avg75k   + `avg120k`  + `avg120+k` +
`%lavdip` + `%10k`  + `%26k`   +
`%55k`    + `%75k` +  `%120k`  +
`%120+k`, data = modelling_)
rcp %>% prep() %>% juice() %>% glimpse()
treer <- decision_tree(
mode = "regression",
cost_complexity = 0.01,
tree_depth = 15,
min_n = 2
) %>% set_engine('rpart')
set.seed(42)
wrkfl_fit_treer <- workflow() %>%
add_model(treer) %>%
add_recipe(rcp) %>%
fit(modelling_)
wrkfl_fit_treer %>%
extract_fit_engine() %>%
rpart.plot::rpart.plot(type=2,tweak = 1.35,roundint = FALSE)
wrkfl_fit_treer %>%
extract_fit_parsnip() %>%
vip::vip(10)
yi <-predict(wrkfl_fit_treer,
new_data = modelling_)
modelling_ <- modelling_ %>%
bind_cols(predict(wrkfl_fit_treer, new_data = modelling_))
cor.test(modelling_$.pred, modelling_$Value) #corr=0.9739351
direst21<-units_rd_21%>%
bind_cols(predict(wrkfl_fit_treer, new_data = units_rd_21))
direst21<-direst21%>%
group_by(Regione,DGURBA)%>%
summarise(yi = weighted.mean(`.pred`,taxpayers),
ni = n(),
sd = sd( `.pred`, na.rm = TRUE),
Var = sd^2)%>%
mutate("SmallArea"= paste(Regione,DGURBA,sep="_"))%>%
left_join(modelling_estimates21)
cor.test(direst19$yi, direst19$Value) #corr=0.9172
cor.test(direst20$yi, direst20$Value) #corr=0.8225
cor.test(direst21$yi, direst21$Value) #corr=0.9137
# SAE ----
if (!require('sae', quietly = TRUE)) { install.packages('sae') }
library('sae')
#### 19----
FH19 <- direst19
FH19[is.na(FH19)] <- 0
FH19 <- FH19%>%
mutate(CV = sd / yi)
summary(FH19$CV*100)
mod_FH <- mseFH(formula   = FH19$yi ~ as.factor(FH19$DGURBA),
vardir    = FH19$Var,
method    = "REML",
MAXITER   = 1000,
PRECISION = 10^(-5),
B         = 0)
FH_CV <- 100 * sqrt(mod_FH$mse) / mod_FH$est$eblup
res_FH19<-data.frame(Publ_Area    = FH19$SmallArea,
Sample_Size  = FH19$ni,
Direct          = round(FH19$yi, digits = 2),
CV       = round(FH19$CV * 100, digits = 2),
FH_EBLUP     = round(mod_FH$est$eblup, digits = 2),
FH_CV        = round(FH_CV, digits = 2),
TIME = 2019,
DGURBA = FH19$DGURBA)
summary(res_FH19)
CV_compare <- as.data.frame(cbind(cut(res_FH19$CV ,c(-0.01,16.5,33.3,100)),cut(res_FH19$FH_CV,c(-0.01,16.5,33.3,100))))
CV_compare<-CV_compare%>%
summarise(
'Direct<16.5' = sum(V1==1) ,
'Direct16.51-33.3' = sum(V1==2),
'Direct>33.31'= sum(V1==3),
'FH<16.5'= sum(V2==1) ,
'FH16.51-33.3'= sum(V2==2),
'FH>33.31'= sum(V2==3),
)
#### 20----
FH20 <- direst20
FH20[is.na(FH20)] <- 0
FH20 <- FH20%>%
mutate(CV = sd / yi)
summary(FH20$CV*100)
mod_FH_20 <- mseFH(formula   = FH20$yi ~ as.factor(FH20$DGURBA),
vardir    = FH20$Var,
method    = "REML",
MAXITER   = 1000,
PRECISION = 10^(-5),
B         = 0)
FH_CV_20 <- 100 * sqrt(mod_FH_20$mse) / mod_FH_20$est$eblup
res_FH20<-data.frame(Publ_Area    = FH20$SmallArea,
Sample_Size  = FH20$ni,
Direct          = round(FH20$yi, digits = 2),
CV       = round(FH20$CV * 100, digits = 2),
FH_EBLUP     = round(mod_FH_20$est$eblup, digits = 2),
FH_CV        = round(FH_CV_20, digits = 2),
TIME = 2020,
DGURBA = FH20$DGURBA)
summary(res_FH20)
CV_compare20 <- as.data.frame(cbind(cut(res_FH20$CV ,c(-0.01,16.5,33.3,100)),cut(res_FH20$FH_CV,c(-0.01,16.5,33.3,100))))
CV_compare20[is.na(CV_compare20)] <- 0
CV_compare20<-CV_compare20%>%
summarise(
'Direct<16.5' = sum(V1==1) ,
'Direct16.51-33.3' = sum(V1==2),
'Direct>33.31'= sum(V1==3),
'FH<16.5'= sum(V2==1) ,
'FH16.51-33.3'= sum(V2==2),
'FH>33.31'= sum(V2==3),
)
#### 21----
FH21 <- direst21
FH21[is.na(FH21)] <- 0
FH21 <- FH21%>%
mutate(CV = sd / yi)
summary(FH21$CV*100)
mod_FH_21 <- mseFH(formula   = FH21$yi ~ as.factor(FH21$DGURBA),
vardir    = FH21$Var,
method    = "REML",
MAXITER   = 1000,
PRECISION = 10^(-5),
B         = 0)
FH_CV_21 <- 100 * sqrt(mod_FH_21$mse) / mod_FH_21$est$eblup
res_FH21<-data.frame(Publ_Area    = FH21$SmallArea,
Sample_Size  = FH21$ni,
Direct          = round(FH21$yi, digits = 2),
CV       = round(FH21$CV * 100, digits = 2),
FH_EBLUP     = round(mod_FH_21$est$eblup, digits = 2),
FH_CV        = round(FH_CV_21, digits = 2),
TIME = 2021,
DGURBA = FH21$DGURBA)
summary(res_FH21)
CV_compare21 <- as.data.frame(cbind(cut(res_FH21$CV ,c(-0.01,16.5,33.3,100)),cut(res_FH21$FH_CV,c(-0.01,16.5,33.3,100))))
CV_compare21[is.na(CV_compare21)] <- 0
CV_compare21<-CV_compare21%>%
summarise(
'Direct<16.5' = sum(V1==1) ,
'Direct16.51-33.3' = sum(V1==2),
'Direct>33.31'= sum(V1==3),
'FH<16.5'= sum(V2==1) ,
'FH16.51-33.3'= sum(V2==2),
'FH>33.31'= sum(V2==3),
)
##### preparing results for the visualization ----
result <- smallareas%>% left_join(res_FH19, join_by(smarea == Publ_Area))
result <- rbind(result,(smallareas%>% left_join(res_FH20, join_by(smarea == Publ_Area))))
result <- rbind(result,(smallareas%>% left_join(res_FH21, join_by(smarea == Publ_Area))))
result <- result[,-4]%>% left_join(povrelbyregion19_21[,c(1,4,5)])
units_result19 <- classified_units%>%
left_join(result%>%
filter(TIME=="2019")%>%
mutate(ISTAT_code = as.character(ISTAT_code)),
join_by("reg_code"=="ISTAT_code","DGURBA"=="DGURBA"))
units_result20 <- classified_units%>%
left_join(result%>%
filter(TIME=="2020")%>%
mutate(ISTAT_code = as.character(ISTAT_code)),
join_by("reg_code"=="ISTAT_code","DGURBA"=="DGURBA"))
units_result21 <- classified_units%>%
left_join(result%>%
filter(TIME=="2021")%>%
mutate(ISTAT_code = as.character(ISTAT_code)),
join_by("reg_code"=="ISTAT_code","DGURBA"=="DGURBA"))
## DEGURBA ----
palette <- c(d1 = "#37123C", d2 = "#71677C", d3 = "#945D5E")
## DEGURBA ----
palette <- c(d1 = "#37123C", d2 = "#71677C", d3 = "#945D5E")
mun<-deg_viz%>%
ggplot() +
geom_sf(aes(geometry = geometry, fill=DGURBA, color=DGURBA)) +
ggtitle("Italy by Degree of Urbanization - Municipality ") +
scale_fill_manual(palette=palette)+
scale_color_manual(palette=palette)+
coord_sf()
mun
mun<-deg_viz%>%
ggplot() +
geom_sf(aes(geometry = geometry, fill=DGURBA, color=DGURBA)) +
ggtitle("Italy by Degree of Urbanization - Municipality ") +
scale_fill_manual(values=c("#37123C","#71677C","#945D5E"))+
scale_color_manual(values=c("#37123C","#71677C","#945D5E"))+
coord_sf()
mun
dev.off()
mun<-deg_viz%>%
ggplot() +
geom_sf(aes(geometry = geometry, fill=DGURBA, color=DGURBA)) +
ggtitle("Italy by Degree of Urbanization - Municipality ") +
scale_fill_manual(values=c("#37123C","#71677C","#945D5E"))+
scale_color_manual(values=c("#37123C","#71677C","#945D5E"))+
coord_sf()
mun
mun<-deg_viz%>%
ggplot() +
geom_sf(aes(geometry = geometry, fill=DGURBA, color=DGURBA)) +
ggtitle("Italy by Degree of Urbanization - Municipality ") +
scale_fill_manual(values=c("#37123C","#71677C","#DDA77B"))+
scale_color_manual(values=c("#37123C","#71677C","#DDA77B"))+
coord_sf()
mun
prov<-deg_viz%>%
ggplot() +
geom_sf(aes(geometry = geometry, fill=deg_prov, color=deg_prov)) +
ggtitle("Italy by Degree of Urbanization - Province")  +
scale_fill_manual(values=c("#37123C","#71677C","#DDA77B"))+
scale_color_manual(values=c("#37123C","#71677C","#DDA77B"))+
coord_sf()
prov
reg<-deg_viz%>%
ggplot() +
geom_sf(aes(geometry = geometry, fill=deg_reg, color=deg_reg)) +
ggtitle("Italy by Degree of Urbanization - Region")  +
scale_fill_manual(values=c("#37123C","#71677C","#DDA77B"))+
scale_color_manual(values=c("#37123C","#71677C","#DDA77B"))+
coord_sf()
reg
reg<-deg_viz%>%
ggplot() +
geom_sf(aes(geometry = geometry, fill=deg_reg, color=deg_reg)) +
ggtitle("Italy by Degree of Urbanization - Region")  +
scale_fill_manual(values=c("#71677C","#DDA77B"))+
scale_color_manual(values=c("#71677C","#DDA77B"))+
coord_sf()
reg
area<-deg_viz%>%
ggplot() +
geom_sf(aes(geometry = geometry, fill=deg_area, color=deg_area)) +
ggtitle("Italy by Degree of Urbanization - Area")  +
scale_fill_manual(values=c("#71677C","#DDA77B"))+
scale_color_manual(values=c("#71677C","#DDA77B"))+
coord_sf()
area
area<-deg_viz%>%
ggplot() +
geom_sf(aes(geometry = geometry, fill=deg_area, color=deg_area)) +
ggtitle("Italy by Degree of Urbanization - Area")  +
scale_fill_manual(values=c("#DDA77B"))+
scale_color_manual(values=c("#DDA77B"))+
coord_sf()
area
## SAE ----
saeviz <- rbind(units_result19,units_result20,units_result21)
SAE_map<-saeviz%>%
ggplot() +
geom_sf(aes(geometry = geometry,fill=FH_EBLUP,color=FH_EBLUP)) +
ggtitle("Small-Area-Estimated Relative Poverty - Region x DEGURBA") +
coord_sf() +
scale_fill_viridis_c(option = "plasma")+
scale_color_viridis_c(option = "plasma")+
facet_grid(. ~ TIME)
SAE_map
saeviz<-saeviz%>%
mutate(FH_nas = ifelse(FH_CV>33.3,NA,FH_EBLUP))
SAE_map_accurate<-saeviz%>%
ggplot() +
geom_sf(aes(geometry = geometry,fill=FH_nas,color=FH_nas)) +
ggtitle("Small-Area-Estimated Relative Poverty - Region x DEGURBA\nAccounting for CV>33.3") +
coord_sf() +
scale_fill_viridis_c(option = "plasma")+
scale_color_viridis_c(option = "plasma")+
facet_grid(. ~ TIME)
SAE_map_accurate
SAE_map_direct<-saeviz%>%
ggplot() +
geom_sf(aes(geometry = geometry,fill=Direct,color=Direct)) +
ggtitle("Relative Poverty - Direct estimates") +
coord_sf() +
scale_fill_viridis_c(option = "plasma")+
scale_color_viridis_c(option = "plasma")+
facet_grid(. ~ TIME)
SAE_map_direct
library(GGally)
SAE_val<- result%>%
dplyr::select(c("TIME", "DGURBA", "FH_EBLUP","smarea","ITTER107"))%>%
pivot_wider(names_from = TIME,
values_from = FH_EBLUP)%>%
mutate(ITTER107 = as.factor(ITTER107))
SAE_val_deg <-ggparcoord(SAE_val, columns = 4:6, groupColumn = 1, order = "anyClass",
scale="globalminmax",
showPoints = TRUE,
title = "Trend of Relative Poverty - by DEGURBA",
alphaLines = 0.3
) +
xlab("")
SAE_val_deg
SAE_val_reg<- ggparcoord(SAE_val, columns = 4:6, groupColumn = 3, order = "anyClass",
scale="globalminmax",
showPoints = TRUE,
title = "Trend of Relative Poverty - by DEGURBA",
alphaLines = 0.3
) +
xlab("")
SAE_val_reg
## TARGETING ----
viz_cr_region <- rbind(viz_cr_region19,viz_cr_region20,viz_cr_region21)
CR_relativepov <- viz_cr_region%>%
ggplot() +
geom_sf(aes(geometry = geometry,fill=cov_rate,color=cov_rate)) +
ggtitle("RdC/PdC Coverage Rate on Household Relative Poverty - Region level") +
coord_sf() +
scale_fill_continuous(type = "viridis")+
scale_color_continuous(type = "viridis")+
facet_grid(. ~ TIME)
CR_relativepov
regional_povrel <-targeting[,c(1,2,4,5)]%>%
mutate(Value=ifelse(is.na(Value),4.2,Value))%>%
left_join(harmonize_region_code)%>%
right_join(viz_cr_region, join_by(ITTER107,TIME))
regional_povrel_map<-regional_povrel%>%
ggplot() +
geom_sf(aes(geometry = geometry,fill=Value,color=Value)) +
ggtitle("Relative Poverty - Regional Incidences") +
coord_sf() +
scale_fill_viridis_c(option = "plasma")+
scale_color_viridis_c(option = "plasma")+
facet_grid(. ~ TIME)
regional_povrel_map
viz_cr_region21_pass <- households_regional_coverage_rate_povass%>%
mutate(rgn = as.factor(rgn))%>%
right_join(deg_viz, join_by("rgn"=="reg_code"))
CR_2021_pass <- viz_cr_region21_pass%>%
ggplot() +
geom_sf(aes(geometry = geometry,fill=cov_rate,color=cov_rate)) +
ggtitle("RdC/PdC Coverage Rate on Household Absolute Poverty - Region level in 2021") +
coord_sf() +
scale_fill_continuous(type = "viridis", option = "magma")+
scale_color_continuous(type = "viridis", option = "magma")
CR_2021_pass
mun
prov
reg
prov
area
SAE_map
SAE_map_accurate
SAE_map_direct
CR_relativepov
regional_povrel_map
CR_2021_pass
View(povrelbyregion19_21)
povrelbyregion19_21 <- read_csv("Dataset/Povertà/povrelbyregion19_21.csv",
col_types = cols(`Tipo dato` = col_skip(),
`Flag Codes` = col_skip(),
"Seleziona periodo"=col_skip(),
Flags = col_skip()))
View(povrelbyregion19_21)
SAE_val <- rbind(SAE_val,c("2019","4","11.4","Italy","IT"),c("2020","4","10.1","Italy","IT"),c("2021","4","11.1","Italy","IT"))
SAE_val_deg <-ggparcoord(SAE_val, columns = 4:6, groupColumn = 1, order = "anyClass",
scale="globalminmax",
showPoints = TRUE,
title = "Trend of Relative Poverty - by DEGURBA",
alphaLines = 0.3
) +
xlab("")
SAE_val_deg
SAE_val_reg<- ggparcoord(SAE_val, columns = 4:6, groupColumn = 3, order = "anyClass",
scale="globalminmax",
showPoints = TRUE,
title = "Trend of Relative Poverty - by DEGURBA",
alphaLines = 0.3
) +
xlab("")
SAE_val_reg
SAE_val<- result%>%
dplyr::select(c("TIME", "DGURBA", "FH_EBLUP","smarea","ITTER107"))%>%
pivot_wider(names_from = TIME,
values_from = FH_EBLUP)%>%
mutate(ITTER107 = as.factor(ITTER107))
SAE_val_deg <-ggparcoord(SAE_val, columns = 4:6, groupColumn = 1, order = "anyClass",
scale="globalminmax",
showPoints = TRUE,
title = "Trend of Relative Poverty - by DEGURBA",
alphaLines = 0.3
) +
xlab("")
SAE_val_deg
SAE_val_deg <-ggparcoord(SAE_val, columns = 4:6, groupColumn = 1, order = "anyClass",
scale="globalminmax",
showPoints = TRUE,
title = "Trend of Relative Poverty - by DEGURBA",
alphaLines = 0.3
) +
scale_fill_manual(values=c("#37123C","#71677C","#DDA77B"))+
xlab("")
SAE_val_deg
SAE_val_deg <-ggparcoord(SAE_val, columns = 4:6, groupColumn = 1, order = "anyClass",
scale="globalminmax",
showPoints = TRUE,
title = "Trend of Relative Poverty - by DEGURBA",
alphaLines = 0.3
) +
scale_color_manual(values=c("#37123C","#71677C","#DDA77B"))+
xlab("")
SAE_val_deg
